---
# Created from information on https://kodi.wiki/view/Linux

- name: Ensure RpmFusion-free repository is installed
  include_role:
    name: jgoutin.home.rpmfusion
  vars:
    rpmfusion_free: true

- name: Ensure Kodi user is present
  user:
    name: kodi

- name: Ensure Kodi and its dependencies are installed
  dnf:
    state: present
    name:
      - "@base-x"
      - kodi
      - kodi-eventclients
      - kodi-inputstream-adaptive
  retries: 10
  delay: 1

- name: Ensure AMD GPU drivers are installed
  dnf:
    state: present
    name: xorg-x11-drv-amdgpu
  retries: 10
  delay: 1
  when: kodi_gpu_vendor == 'amd'

- name: Ensure LIRC is installed
  dnf:
    state: present
    name: lirc
  retries: 10
  delay: 1
  when: kodi_ir_remote | bool

- name: Ensure LIRC service is started and enabled at boot
  service:
    name: lircd
    state: started
    enabled: true
  when: kodi_ir_remote | bool

- name: Ensure Kodi userdata directory is present
  file:
    path: /home/kodi/.kodi/userdata
    state: directory
    owner: kodi
    group: kodi

- name: Ensure Kodi exit button is disabled
  copy:
    src: advancedsettings.xml
    dest: /home/kodi/.kodi/userdata/advancedsettings.xml
    owner: kodi
    group: kodi

- name: Ensure Unzip is installed
  # Required by "unarchive" following step
  dnf:
    state: present
    name: unzip
  retries: 10
  delay: 1
  when: kodi_restore_profile is defined

- name: Ensure Kodi profile is restored
  unarchive:
    src: "{{ kodi_restore_profile }}"
    dest: /home/kodi/.kodi
    owner: kodi
    group: kodi
    creates: /home/kodi/.kodi/userdata/profiles.xml
  when: kodi_restore_profile is defined

- name: Ensure Kodi start automatically on kodi user terminal login
  copy:
    src: .bash_profile
    dest: /home/kodi/.bash_profile
    owner: kodi
    group: kodi

- name: Ensure Kodi Xinit configuration is present
  copy:
    src: .xinitrc
    dest: /home/kodi/.xinitrc
    owner: kodi
    group: kodi

- name: Ensure Kodi logout command is present
  copy:
    src: kodi-logout
    dest: /usr/local/bin/kodi-logout
    mode: 0755

- name: Ensure Kodi firewalld zone is present
  firewalld:
    zone: "{{ kodi_firewalld_zone }}"
    state: present
    permanent: true
  when:
    - kodi_firewalld_source is defined
    - kodi_remote_control | bool

- name: Ensure firewalld is reloaded
  command: firewall-cmd --reload
  changed_when: false
  when:
    - kodi_firewalld_source is defined
    - kodi_remote_control | bool

- name: Ensure source is defined in firewalld zone
  firewalld:
    zone: "{{ kodi_firewalld_zone }}"
    source: "{{ kodi_firewalld_source }}"
    state: enabled
    permanent: true
    immediate: true
  when:
    - kodi_firewalld_source is defined
    - kodi_remote_control | bool

- name: Ensure firewalld allow Kodi remote control
  firewalld:
    zone: "{{ kodi_firewalld_zone }}"
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
    - kodi-http
    - kodi-eventserver
    - kodi-jsonrpc
  when: kodi_remote_control | bool

- name: Ensure admin firewalld zone allow Kodi remote control
  firewalld:
    zone: admin
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
    - kodi-http
    - kodi-eventserver
    - kodi-jsonrpc
  when:
    - kodi_remote_control | bool
    - common_trusted_firewalld_source is defined

- name: Ensure getty@tty1 service directory is present
  file:
    path: /etc/systemd/system/getty@tty1.service.d/
    state: directory

- name: Ensure Kodi getty@tty1 autologin service unit is present
  copy:
    src: kodi.conf
    dest: /etc/systemd/system/getty@tty1.service.d/kodi.conf

- name: Ensure getty@tty1 service is restarted
  systemd:
    name: getty@tty1
    state: restarted
  changed_when: false
